package Helpers;

import Dao.Implements.UserDaoImp;
import Entities.User;
import Utilities.IO;

import java.util.Optional;
import java.util.Scanner;

public class LoginUser {
    private UserDaoImp userDao;
    private Scanner scanner;
    private User usuarioLogueado;

    public LoginUser() {
        this.userDao = new UserDaoImp();
        this.scanner = new Scanner(System.in);
        this.usuarioLogueado = null;
    }

    // M√âTODO PRINCIPAL DE LOGIN
    public boolean iniciarSesion() {
        System.out.println("\n=== INICIAR SESI√ìN ===");

        try {

            System.out.print("Email: ");
            String email = scanner.nextLine().trim();

            System.out.print("Contrase√±a: ");
            String password = scanner.nextLine().trim();

            // Validar credenciales
            if (validarCredenciales(email, password)) {
                IO.imp("‚úÖ ¬°Inicio de sesi√≥n exitoso!\n");
                IO.imp("Bienvenido/a: " + usuarioLogueado.getName() + "\n");
                return true;
            }


        } catch (Exception e) {
            IO.imp("‚ùå Error durante el inicio de sesi√≥n: " + e.getMessage());
        }

        return false;
    }

    // VALIDAR CREDENCIALES
    private boolean validarCredenciales(String email, String password) {
        if (email.isEmpty() || password.isEmpty()) {
            IO.imp("‚ùå Email y contrase√±a son obligatorios");
            return false;
        }

        // Validar usando el m√©todo del DAO
        boolean credencialesValidas = userDao.validateCredentials(email, password);

        if (credencialesValidas) {
            // Obtener los datos del usuario
            Optional<User> usuarioOpt = userDao.findByEmail(email);
            if (usuarioOpt.isPresent()) {
                this.usuarioLogueado = usuarioOpt.get();
                return true;
            }
        }

        return false;
    }

    // CERRAR SESI√ìN
    public void cerrarSesion() {
        if (usuarioLogueado != null) {
            IO.imp("üëã Sesi√≥n cerrada para: " + usuarioLogueado.getName());
            this.usuarioLogueado = null;
        } else {
            IO.imp("‚ÑπÔ∏è No hay sesi√≥n activa");
        }
    }

    // VERIFICAR SI HAY USUARIO LOGUEADO
    public boolean hayUsuarioLogueado() {
        return usuarioLogueado != null;
    }

    // OBTENER USUARIO ACTUAL
    public User getUsuarioLogueado() {
        return usuarioLogueado;
    }

    // CAMBIAR CONTRASE√ëA
    public boolean cambiarContrase√±a() {
        if (!hayUsuarioLogueado()) {
            IO.imp("‚ùå Debe iniciar sesi√≥n primero");
            return false;
        }

        IO.imp("\n--- CAMBIAR CONTRASE√ëA ---");
        IO.imp("Usuario: " + usuarioLogueado.getName());

        try {
            // Verificar contrase√±a actual
            System.out.print("Contrase√±a actual: ");
            String contrase√±aActual = scanner.nextLine().trim();

            System.out.print("Nueva contrase√±a: ");
            String nuevaContrase√±a = scanner.nextLine().trim();

            System.out.print("Confirmar nueva contrase√±a: ");
            String confirmarContrase√±a = scanner.nextLine().trim();

            // Validaciones
            if (nuevaContrase√±a.length() < 4) {
                IO.imp("‚ùå La nueva contrase√±a debe tener al menos 4 caracteres");
                return false;
            }

            if (!nuevaContrase√±a.equals(confirmarContrase√±a)) {
                IO.imp("‚ùå Las contrase√±as no coinciden");
                return false;
            }

            // Cambiar contrase√±a usando el DAO
            boolean resultado = userDao.changePassword(
                    usuarioLogueado.getCedula(),
                    contrase√±aActual,
                    nuevaContrase√±a
            );

            if (resultado) {
                IO.imp("‚úÖ Contrase√±a cambiada exitosamente");
            }

            return resultado;

        } catch (Exception e) {
            IO.imp("‚ùå Error al cambiar contrase√±a: " + e.getMessage());
            return false;
        }
    }

    // RECUPERAR CONTRASE√ëA (por c√©dula y email)
    public void recuperarContrase√±a() {
        IO.imp("\n--- RECUPERAR CONTRASE√ëA ---");

        try {
            System.out.print("Ingrese su c√©dula: ");
            long cedula = scanner.nextLong();
            scanner.nextLine(); // Limpiar buffer

            System.out.print("Ingrese su email: ");
            String email = scanner.nextLine().trim();

            // Verificar que exista el usuario con esa c√©dula y email
            Optional<User> usuarioOpt = userDao.findByCedula(cedula);

            if (usuarioOpt.isPresent()) {
                User usuario = usuarioOpt.get();

                if (usuario.getEmail().equalsIgnoreCase(email)) {
                    IO.imp("\n‚úÖ Datos verificados correctamente");
                    IO.imp("Usuario: " + usuario.getName());
                    IO.imp("Email: " + usuario.getEmail());
                    IO.imp("\nPor seguridad, contacte al administrador para restablecer su contrase√±a.");
                } else {
                    IO.imp("‚ùå El email no coincide con la c√©dula proporcionada");
                }
            } else {
                IO.imp("‚ùå No se encontr√≥ usuario con la c√©dula proporcionada");
            }

        } catch (Exception e) {
            IO.imp("‚ùå Error en recuperaci√≥n: " + e.getMessage());
            scanner.nextLine(); // Limpiar buffer en caso de error
        }
    }

    // MOSTRAR PERFIL DEL USUARIO
    public void mostrarPerfil() {
        if (!hayUsuarioLogueado()) {
            IO.imp("‚ùå Debe iniciar sesi√≥n primero");
            return;
        }

        IO.imp("\n--- MI PERFIL ---");
        IO.imp("‚Ä¢ C√©dula: " + usuarioLogueado.getCedula());
        IO.imp("‚Ä¢ Nombre: " + usuarioLogueado.getName());
        IO.imp("‚Ä¢ Email: " + usuarioLogueado.getEmail());
        IO.imp("‚Ä¢ Fecha Nacimiento: " + usuarioLogueado.getBirthDate());
        IO.imp("‚Ä¢ Pa√≠s: " + usuarioLogueado.getCountry());
        IO.imp("----------------------------");
    }

    // MEN√ö DE USUARIO LOGUEADO
    public void menuUsuario() {
        if (!hayUsuarioLogueado()) {
            IO.imp("‚ùå Debe iniciar sesi√≥n primero");
            return;
        }

        boolean salir = false;

        while (!salir) {
            IO.imp("\n=== MEN√ö USUARIO ===");
            IO.imp("Usuario actual: " + usuarioLogueado.getName());
            IO.imp("1. Ver mi perfil");
            IO.imp("2. Cambiar contrase√±a");
            IO.imp("3. Cerrar sesi√≥n");
            IO.imp("0. Volver al men√∫ principal");

            System.out.print("Seleccione una opci√≥n: ");
            String opcion = scanner.nextLine().trim();

            switch (opcion) {
                case "1":
                    mostrarPerfil();
                    break;

                case "2":
                    cambiarContrase√±a();
                    break;

                case "3":
                    cerrarSesion();
                    salir = true;
                    break;

                case "0":
                    salir = true;
                    break;

                default:
                    IO.imp("‚ùå Opci√≥n inv√°lida");
            }
        }
    }

    // Liberar recursos
    public void cerrarRecursos() {
        if (scanner != null) {
            scanner.close();
        }
    }
}